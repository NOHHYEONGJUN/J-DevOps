apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "21"
    meta.helm.sh/release-name: harbor
    meta.helm.sh/release-namespace: harbor
  creationTimestamp: "2024-11-27T11:00:38Z"
  generation: 21
  labels:
    app: harbor
    app.kubernetes.io/component: portal
    app.kubernetes.io/instance: harbor
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: harbor
    app.kubernetes.io/part-of: harbor
    app.kubernetes.io/version: 2.12.0
    chart: harbor
    component: portal
    heritage: Helm
    release: harbor
  name: harbor-portal
  namespace: harbor
  resourceVersion: "1048211"
  uid: d6d52f91-80d7-49dd-a320-83e8edcbc512
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: harbor
      component: portal
      release: harbor
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        checksum/configmap: ce1e3338db7894857c8dc20a8934a19f88a7585892356ba2b29d388427899c25
        kubectl.kubernetes.io/restartedAt: "2024-11-28T17:07:22+09:00"
      creationTimestamp: null
      labels:
        app: harbor
        app.kubernetes.io/component: portal
        app.kubernetes.io/instance: harbor
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: harbor
        app.kubernetes.io/part-of: harbor
        app.kubernetes.io/version: 2.12.0
        chart: harbor
        component: portal
        heritage: Helm
        release: harbor
    spec:
      automountServiceAccountToken: false
      containers:
      - image: goharbor/harbor-portal:v2.12.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 300
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: portal
        ports:
        - containerPort: 8080
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 1
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/nginx/nginx.conf
          name: portal-config
          subPath: nginx.conf
        - mountPath: /usr/share/nginx/html/images/harbor-logo.svg
          name: custom-logo
          subPath: harbor-logo.svg
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        fsGroup: 10000
        runAsUser: 10000
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          defaultMode: 420
          name: harbor-portal
        name: portal-config
      - configMap:
          defaultMode: 420
          name: harbor-custom-logo
        name: custom-logo
status:
  availableReplicas: 1
  conditions:
  - lastTransitionTime: "2024-11-28T05:34:38Z"
    lastUpdateTime: "2024-11-28T05:34:38Z"
    message: Deployment has minimum availability.
    reason: MinimumReplicasAvailable
    status: "True"
    type: Available
  - lastTransitionTime: "2024-11-27T11:00:38Z"
    lastUpdateTime: "2024-11-28T08:07:24Z"
    message: ReplicaSet "harbor-portal-64847b688b" has successfully progressed.
    reason: NewReplicaSetAvailable
    status: "True"
    type: Progressing
  observedGeneration: 21
  readyReplicas: 1
  replicas: 1
  updatedReplicas: 1